@model ThAmCo.Events.Models.EventVenueViewModel

@{
    ViewData["Title"] = "Details";
}

<h2>Venue Details for @Model.Title</h2>

<div>
    <hr />
    <h4>Event Details</h4>
    <dl>
        <dt>
            @Html.DisplayNameFor(model => model.TypeId);
        </dt>
        <dd>
            <span id="typeId">@Html.DisplayFor(model => model.TypeId)</span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Date);
        </dt>
        <dd>
            <span id="beginDate">@Html.DisplayFor(model => model.Date)</span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Duration);
        </dt>
        <dd>
            <span id="duration">@Html.DisplayFor(model => model.Duration)</span>
        </dd>
    </dl>
    <h4>Reservation Details</h4>
    @if (Model.Reservation == null)
    {
        <p>No venue reservation found for current Event.</p>
        <hr/>
        <h4>Availabilities</h4>
        @if (Model.Availabilities.Count > 0)
        {
            <p>Found <b>@Model.Availabilities.Count</b> availabilities:</p>
            @Html.DropDownListFor(model => model.SelectedVenue, Model.AvailabilitiesSelectList, "Please choose a venue.", new { id = "venueSelect", form = "menuForm", @class = "form-control" })
            <br />
            <p id="venueInfo">Selected venue information will be shown here.</p>
            <form id="menuForm" asp-action="Venue">
                <input asp-for="Id" type="hidden" />
                <input asp-for="Date" type="hidden" id="formDate" />
                <input asp-for="TypeId" type="hidden" />
                <input type="submit" id="reserveButton" disabled="disabled" class="btn btn-default" value="Reserve" />
            </form>

        }
        else
        {
            <p>No venue availabilities were found for this day, Sorry.</p>
        }
        <br />
    }
    else
    {
        <h4>Venue:</h4>
        <dl>
            <dt>
                @Html.DisplayNameFor(model => model.Venue.Name)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Venue.Name)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Venue.Description)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Venue.Description)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Venue.Capacity)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Venue.Capacity)
            </dd>
        </dl>
        <h4>Reservation:</h4>
        <dl>
            <dt>
                @Html.DisplayNameFor(model => model.Reservation.WhenMade)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Reservation.WhenMade)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Reservation.Reference)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Reservation.Reference)
            </dd>
        </dl>
        <form asp-action="VenueCancel" asp-route-id="@Model.Id">
            <input asp-for="@Model.Id" type="hidden" />
            <input asp-for="@Model.ReservationReference" name="reference" type="hidden"/>
            <input type="submit" class="btn btn-danger" value="Cancel Reservation" />
        </form>
    }
    <hr />
</div>
<div>
    <a asp-action="Edit" class="btn btn-warning" asp-route-id="@Model.Id"><span class="glyphicon glyphicon-pencil"></span> Edit Event</a>
    <a asp-action="Index" class="btn btn-default">Back to List</a>
</div>
@section Scripts {
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script>
        $(document).ready(function () {
            var eventType = $('#typeId').text();
            var datestr = $('#beginDate').text();
            var duration = $('#duration').text();
            duration = duration.replace(/[a-z]{1}/g, "").split(" ");
            datestr = datestr.substring(0, 10).split("/");
            $('#formDate').val(datestr);

            $('#venueSelect').on('change', function () {
                var selected = $(this).find('option:selected');
                var name = selected.text();
                var id = selected.val();
                if (id == "") {
                    $('#reserveButton').prop("disabled", "disabled");
                    $('#venueInfo').text("Selected venue information will be shown here.");
                    return;
                }
                $('#venueInfo').text("Getting info...");
                var startdate = new Date(datestr[2], datestr[1]-1, datestr[0]);
                var enddate = new Date(datestr[2], datestr[1] - 1, datestr[0], duration[0], duration[1], duration[2]);
                // AJAX call \/
                $.get(("http://localhost:23652/api/availability?eventType=" + eventType + "&beginDate=" + startdate.toISOString() + "&endDate=" + enddate.toISOString()), function (res) {
                    var venue;
                    var venues = res;
                    for (i = 0; i < venues.length; i++) {
                        if (venues[i].code == id && venues[i].name == name) {
                            venue = venues[i];
                            break;
                        }
                    }

                    if (venue === 'undefined') {
                        $('#venueInfo').text("Apologies, something has went wrong!");
                        return;
                    }
                    $('#venueInfo').html(
                        "<dl><dt>Name:</dt><dd>" + venue.name + "</dd><dt>Description:</dt><dd>" + venue.description + "</dd><dt>Code per Hour:</dt><dd>£" + venue.costPerHour+ "</dd><dt>Capacity:</dt><dd>" + venue.capacity + " people</dd></dl>"
                    );
                    $('#reserveButton').prop("disabled","");
                });
            });
        });
    </script>
}